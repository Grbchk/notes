//---(функциональное выражение)---
//ПРИМЕРЫ
// функция, положенная в переменную
const double = function (num) {
    return num * 2;
};
//функция, определённая в вызове метода
[1, 2, 3].map(function (item) {
    return item * 2;
}); 
//функция определенная в скобках тоже функциональное выражение
(function () {
    const button = document.querySelector('button');
}); //без скобок в конце код удалится движком браузера
//
//---(IIFE)---
//это способ, когда функция создаётся и сразу же вызывается
//позволяет избавиться от создания глобальных переменных
//таким функциональным выражением с вызовом можно обернуть любой код:
(function () {
    const button = document.querySelector('button'); //область видимости находится внутри функции
    //...
})(); //добавим скобочки в конце


//---(инкапсуляция)---
//способ описывать функциональность объектом, а всю логику заключать в его внутренние методы
//все нужные переменные содержатся в методах объекта, поэтому к ним можно спокойно обращаться снаружи
const Chart = (function() {  //переменной Chart присваивается объект с методами возвращенными return
    const data = []; //такие локальные переменные не видны снаружи
    return {
        render: function (data) { /* ... */ }, //эти методы(render, setData) публичны и будут доступны в объекте Chart
        setData: function (data) { /* ... */ }
    };
}()); //IIFE возвращает объект
Chart.render([[0,12], [1,22], [3,18]]); 


//---(модули)---
//подключение модулей
<script type="module" src="script-01.js"></script> //даем браузеру понять, что на сайте используются модули
/<script type="nomodule"></script> - этот модуль загрузится, если браузер старый
//экспорт из модуля при объявлении
export const date = [12, 22, 31];
export function myFunc() {};  
//экспорт нескольких переменных и функций
export { array, arrSquared, date }; 
//импорт в модуль 
import { str, myFunc } from './script.js'; 
//импорт всего экспортируемого (так лучше не делать)
import * as data from './script.js';
//переименовать при экспорте/импорте
export { array as arr, ... }; 
import { arrSquared as sq, ... } from './data.js'
//экспорт по умолчанию (использовать, когда нужно экспортировать только одну функ/перем)
//default экспорт (!)только один в файле
export default function renderItems() {};  //render-items.js
export default class { constructor() { } };  //song.js
export default [12, 22, 31];  //data.js
//имена задаются при импорте, экспортировать можно даже безымянные функ/перем
//импорт по умолчанию (без фигурных скобок)
import renderFiles from './render-items.js';
import Song from './song.js';
import someArr from './data.js'; 


